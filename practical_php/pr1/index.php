<?php

// Задача 1.1. Дана строка «php». Сделайте из нее строку «PHP».
echo strtoupper("php");

// Задача 1.2. Дана строка «PHP». Сделайте из нее строку «php».
echo "<br><br>1.2 " . strtolower("PHP");

// Задача 1.3. Дана строка «london». Сделайте из нее строку «London».
echo "<br><br>1.3 " . ucfirst("london");

// Задача 1.4. Дана строка «London». Сделайте из нее строку «london».
echo "<br><br>1.4 " . lcfirst("London");

/** 
 * Задача 1.5. Дана строка «london is the capital of great britain». 
 * Сделайте из нее строку «London Is The Capital Of Great Britain». 
 * */ 
echo "<br><br>1.5 " . ucwords("london is the capital of great britain");

// Задача 1.6. Дана строка «LONDON». Сделайте из нее строку «London».
echo "<br><br>1.6 " . ucfirst(strtolower("LONDON"));

/**
 * Задача 2.1. Дана переменная $password, в которой хранится пароль пользователя.
 * Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю
 * сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать
 * другой пароль. 
 */
echo "<br><br> 2.1 ";

$pass = "54y4y4777777yyy";

if (strlen($pass) < 5) {
    echo "придумайте другой пароль.";
} elseif (strlen($pass) > 10) {
    echo "придумайте другой пароль.";
} else {
    echo "пароль подходит";
}

/* Задача 3.1. Дана строка «html css php». Вырежьте из нее и выведите на экран слово
«html», слово «css» и слово «php». */
echo "<br><br>3.1 ";
$str = "html css php";
echo substr($str, 0, 4) . " | ";
echo substr($str, 5, 3) . " | ";
echo substr($str, -3) . " |";

// Задача 3.2. Дана строка. Вырежьте и выведите на экран последние 3 символа этой строки.
echo "<br><br>3.2 ";
echo substr("russia", -3, 3) ;

/**
 * Задача 3.3. Дана строка. Проверьте, что она начинается на «http://». Если это так,
 * выведите «да», если не так - «нет». 
 *  */ 
echo "<br><br>3.3 ";
if (substr("http://mishkozyr.ru", 0, 7) == "http://") {
    echo "да";
} else {
    echo "нет";
}

/* Задача 3.4. Дана строка. Проверьте, что она начинается на «http://» или на «https://».
Если это так, выведите «да», если не так - «нет». */
echo "<br><br>3.4 ";
$str = "https://mishakozyr.ru";
if (substr($str, 0, 7) == "http://" || substr($str, 0, 8) == "https://") {
    echo "да";
} else {
    echo "нет";
}

/**
 * Задача 3.5. Дана строка. Проверьте, что она заканчивается на «.png». Если это так,
 * выведите «да», если не так - «нет».
 */
echo "<br><br>3.5 ";
if (substr("foto.png", -4) == ".png") {
    echo "да";
} else {
    echo "нет";
}

/**
 * Задача 3.6. Дана строка. Проверьте, что она заканчивается на «.png» или на «.jpg».
 * Если это так, выведите «да», если не так - «нет». 
 */
echo "<br><br>3.6 ";
$str = "foto.jpg";
if (substr($str, -4) == ".png" || substr($str, -4) == ".jpg") {
    echo "да";
} else {
    echo "нет";
}

/**
 * Задача 3.7. Дана строка. Если в этой строке более 5-ти символов - вырежьте из нее первые 5 символов, 
 * добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов - просто 
 * выведите эту строку на экран.
 */
echo "<br><br>3.7 ";
$str = "123456789";
if (strlen($str) > 5)  {
    echo substr($str, 0, 5) . "...";
} else {
    echo $str;
}

// Задача 4.1. Дана строка «31.12.2022». Замените все точки на дефисы.
echo "<br><br>4.1 ";
echo str_replace(".", "-", "31.12.2022");

/**
 * Задача 4.2. Дана строка «She looked again at the calendar». Замените в ней все буквы
 * «a» на цифру 1, буквы «e» - на 2, а буквы «n» - на 3
 */
echo "<br><br>4.2 ";
echo str_replace(["a", "e", "n"], [1, 2, 3], "She looked again at the calendar");

/**
 * Задача 4.3. Дана строка с буквами и цифрами, например, «1a2b3c4b5d6e7f8g9h0». 
 * Удалите из нее все цифры. То есть в нашем случае должна получится строка «abcbdefgh».
 */
echo "<br><br>4.3 ";
echo str_replace([1, 2, 3, 4, 5, 6, 7, 8, 9, 0], [""], "1a2b3c4b5d6e7f8g9h0");

/**
 * Задача 5.1. Дана строка «She looked again at the calendar». 
 * Замените в ней все буквы «a» на цифру 1, буквы «e» - на 2, а буквы «n» - на 3
 */
echo "<br><br>5.1 ";
echo strtr("She looked again at the calendar", ["a" => 1, "e" => 2, "n" => 3]);

/**
 * Задача 6.1. Дана строка «the password cannot be empty». 
 * Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте «!!!».
 */
echo "<br><br>6.1 ";
echo substr_replace("the password cannot be empty", "!!!", 3, 5);

// Задача 7.1. Дана строка «abc abc abc». Определите позицию первой буквы «b».
echo "<br><br>7.1 ";
echo strpos("abc abc abc", "b");

// Задача 7.2. Дана строка «abc abc abc». Определите позицию последней буквы «b».
echo "<br><br>7.2 ";
echo strrpos("abc abc abc", "b");

/**
 * Задача 7.3. Дана строка «abc abc abc». Определите позицию первой найденной
 * буквы «b», если начать поиск не с начала строки, а с позиции 3
 */
echo "<br><br>7.3";
echo strpos("abc abc abc", "b", 3);

// Задача 7.4. Дана строка «aaa aaa aaa aaa aaa». Определите позицию второго пробела.
echo "<br><br>7.4";
$str = "aaa aaa aaa aaa aaa";
echo strpos($str, " ", strpos($str, " ") + 1 );

// Задача 7.5. Проверьте, что в строке есть две точки подряд. Если это так - выведите «есть», если не так - «нет». 
echo "<br><br>7.5 ";
if (strpos("gggggg..ggg.g.", "..") == true) {
    echo "есть";
} else {
    echo "нет";
}

// Задача 7.6. Проверьте, что строка начинается на «http://». Если это так - выведите «да», если не так - «нет». 
echo "<br><br>7.6 ";
if (strpos("http://ggggggggg.com", "http://") === 0) {
    echo "есть";
} else {
    echo "нет";
}

// Задача 8.1. Дана строка. Очистите ее от концевых пробелов.
echo "<br><br>8.1 ";
echo trim("   bbbbbbb   ");

// Задача 8.2. Дана строка «/php/». Сделайте из нее строку «php», удалив концевые слеши. 
echo "<br><br>8.2 ";
echo trim("/php/", "/");

/**
 * Задача 8.3. Дана строка «слова слова слова.». В конце этой строки может быть
 * точка, а может и не быть. Сделайте так, чтобы в конце этой строки гарантировано стояла
 * точка. То есть: если этой точки нет - ее надо добавить, а если есть - ничего не делать.
 * Задачу решите через rtrim без всяких ифов. 
 */
echo "<br><br>8.3 ";
echo rtrim("слова слова слова.", ".") . ".";

// Задача 9.1. Дана строка «12345». Сделайте из нее строку «54321».
echo "<br><br>9.1 ";
echo strrev("12345");

/**
 * Задача 9.2. Проверьте, является ли слово палиндромом (одинаково читается во всех
 * направлениях, примеры таких слов: madam, otto, kayak, nun, level). 
 */
echo "<br><br>9.2 ";
$arr = ["madam", "otto", "kayak", "nun", "level"];

function check_palindrom($arr)
{
    $res = "";
    foreach ($arr as $item) {
        if ($item == strrev($item)) {
            $res .= "$item - является; ";
        } else {
            $res .= "$item - не является; ";
        }
    }
    return $res;
}

echo check_palindrom($arr);

/**
 * Задача 10.1. Дана строка «the password cannot be empty». Перемешайте символы
 * этой строки в случайном порядке.
 */
echo "<br><br>10.1 ";
echo str_shuffle("the password cannot be empty");

// Задача 11.1. Дана строка «12345678». Сделайте из нее строку «12 345 678».
echo "<br><br>11.1 ";
echo number_format("12345678", "0", ",", " ");

// Задача 12.1. Дана строка «html, <b>php</b>, js». Удалите теги из этой строки.
echo "<br><br>12.1 ";
echo strip_tags("html, <b>php</b>, js");

/**
 * Задача 12.2. Дана строка «<div><span>the <a>password</a></span> cannot
 * <b><i>be</i></b> <strong>empty</strong></div>». Удалите все теги из этой строки, кроме
 * тегов <b> и <i>.
 */
echo "<br><br>12.2 ";
echo strip_tags("<div><span>the <a>password</a></span> cannot <b><i>be</i></b> <strong>empty</strong></div>", "<b><i></i></b>");

/**
 * Задача 12.3. Дана строка «html, <b>php</b>, js». Выведите ее на экран «как есть»: то
 * есть браузер не должен преобразовать <b> в жирный.
 */
echo "<br><br>12.3 ";
echo htmlspecialchars("html, <b>php</b>, js");

// Задача 13.1. Узнайте код символов «a», «b», «c», пробела.
echo "<br><br>13.1 ";
echo ord("a") . " ";
echo ord("b") . " ";
echo ord("c") . " ";
echo ord(" ");

/**
 * Задача 13.2. Изучите таблицу ASCII. Определите границы, в которых
 * располагаются буквы английского алфавита.
 */
echo "<br><br>13.2 ";
echo ord("A") . "-" . ord("Z") . " ";
echo ord("a") . "-" . ord("z");

// Задача 13.3. Выведите на экран символ с кодом 33
echo "<br><br>13.3 ";
echo chr(33);

/**
 * Задача 13.4. Запишите в переменную $str случайный символ - большую букву
 * латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые
 * числа соответствуют большим буквам латинского алфавита.
 */
echo "<br><br>13.4 ";
$str = chr(rand(ord("A"), ord("Z")));
echo $str;

/* Задача 13.5. Дана буква английского алфавита «f». Узнайте, она маленькая или
большая. Выведите букву и результат на экран. */
echo "<br><br>13.5 ";
$bukv = "f";
if (ord($bukv) >= 65 && ord($bukv) <= 90) {
    echo "большая";
} elseif (ord($bukv) >= 97 && ord($bukv) <= 122) {
    echo "маленькая";
} else {
    echo "не является буквой латинского алфавита";
}

// Задача 14.1. Дана строка «ab-cd-ef». С помощью функции strchr выведите на экран строку «-cd-ef».
echo "<br><br>14.1 ";
echo strchr("ab-cd-ef", "-");

// Задача 14.2. Дана строка «ab-cd-ef». С помощью функции strrchr выведите на экран строку «-ef». Показать решение.
echo "<br><br>14.2 ";
echo strrchr("ab-cd-ef", "-");

// Задача 15.1. Дана строка «ab--cd--ef». С помощью функции strstr выведите на экран строку «--cd--ef».
echo "<br><br>15.1 ";
echo strstr("ab--cd--ef", "--");

/**
 * Дополнительная задача:
 * Преобразуйте строку «var_test_text» в «varTestText». Скрипт, конечно же, должен
 * работать с любыми аналогичными строками.
 */
echo "<br><br>доп. задание: ";
$str = "var_test_text";
$str1 = str_replace("_", " ", $str);
$str2 = ucwords($str1);
$str3 = str_replace(" ", "", $str2);
echo lcfirst($str3);
